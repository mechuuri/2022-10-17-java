/*
 * 	&(*) , |(+) , ^
 * 
 * 	==> 2진법으로 변환 후 연산 ==> 정수는 32bit
 * 
 * 	-----------------------------------------
 * 				&(*)		|(+)		^(비트가 다르다)
 * 	-----------------------------------------
 * 		00		0			0			0	
 * 	-----------------------------------------
 *		01		0			1 			1
 * 	-----------------------------------------
 * 		10		0			1			1
 * 	-----------------------------------------
 * 		11		1			1			0
 * 	-----------------------------------------
 *		
 *		25&10
 *		 ㄴ16+8+1
 *		  11001
 *		  01010
 *		--------&
 *		  01000 ==> 8
 *
 *		25|10
 *		11001 => 25
 *		01010 => 10
 		
 		11011=> 16+8+2+1 ==> 27
 * 
 * 		25^10
 * 		11001
 * 		01010
 * 
 * 		10011 ==> 16+2+1 ==> 19
 * 
 * 		35&26
 * 		32+2+1 => 100011
 * 		16+8+2+0=>011010
 * 					000010 ==>2
 * 
 * 		35|26
 * 		100011	
 * 		011010
 * 		111011 ==> 32+16+8+2+1 ==> 59
 * 
 * 		35^26
 * 		100011
 * 		011010
 * 		111001 ==> 32+16+8+1 ==> 57
 * 
 * 		67&45
 * 		64+2+1 ==> 1000011
 * 		32+8+4+1 ==> 0101101
 * 					0000001 ==>1
 * 		
 * 		67|45
 * 		1000011
 * 		0101101
 * 		1101111 ==> 64+32+8+4+2+1 ==> 111
 * 
 * 		67^45
 * 		1000011
 * 		0101101
 * 		1101110 ==> 64+32+8+4+2 ==> 110
 * 
 * 
 * 
 * 
 */
public class 비트연산자_1 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		System.out.println(25&10);
		System.out.println(Integer.toBinaryString(67));
		System.out.println(25|10);
		System.out.println(25^10);
		
		System.out.println(67^45);
		
	}

}
