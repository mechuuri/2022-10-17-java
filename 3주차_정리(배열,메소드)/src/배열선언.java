import java.util.Arrays;

//182page
/*
 * 	1. 변수
 * 	2. 식별자
 * 	3. 연산자 (증감연산자,부정연산자,형변환연산자,산술,비교,논리,대입)
 * 	4. 제어문 (조건문,반복문,반복제어문)
 * 			if,for,while,break ==> 공부
 * 	5. 관련된 데이터를 묶는 방법
 * 	6. 관련된 명령문을 묶는 방법
 * 	----------------------- + 클래스 (데이터 묶음, 메소드 묶음) ==> 한개의 프로그램을 완성 (객체지향 형식)
 * 	==> 부품 (조립) ==> 레고 조각 ==> 조립
 * 		게시판,영화, 예매 ... 영화 사이트
 * 	1) 형식, 문법  ==> 응용(순서) 
 * 	------------------------
 * 		오라클 (자바 연동)
 * 		HTML,CSS (자바 연동)
 * 	------------------------
 * 	2) 배열
 * 	--------
 * 		* 같은 데이터형을 여러개 모아서 관리
 * 		* 메모리 한 곳에 모아서 관리 (연속적인 메모리 구조 : 메모리 크기가 동일)
 * 											----------- 번호(인덱스, 첨자)를 이용해서 처리
 * 		* 단점 : 고정적 (한번 지정하면 => 변경할 수 없다)
 * 								------------- 큰 배열을 다시 생성 (메모리 누수)
 * 		* 종류 : 1차원 배열, 2차원 배열, 다차원 배열, 가변 배열
 * 						-------------------------- 사용이 별로 안됨. 1차원만 공부하걸아
 * 			- 변수 : 한개만 저장
 * 			- 여러개 존재 : 1차원 배열
 * 			- 1차원 배열이 여러개 존재 : 2차원 배열
 * 
 * 	3) 배열을 선언과 생성
 * 		1. 선언
 * 			데이터형[] 배열명;
 * 			데이터형 배열명[];
 * 			----------------- 배열은 null값을 가짐 (실제 저장 데이터가 저장된 위치(메모리주소))
 * 								=> null일 경우 오류가 발생 (NullPointerException) -> 데이터가 없다
 * 								=> 메모리 주소를 이용해서 접근하는 방식이기 때문에 참조형 데이터라고 함
 * 			예)
 * 				int[] arr;
 * 				
 * 				Stack
 * 				 arr
 * 				-----
 * 				-----
 * 
 * 	4) 초기화 방법 (값을 대입)
 * 		연속적인 메모리를 몇개 만들것인지?
 * 			int a;
 * 			a=10;
 * 		1. 데이터형[] 배열명={값,값...}
 * 			=> 데이터형[] 배열명;
 * 			      배열명=new 데이터형[]{값,값...}
 * 		2. 데이터형[] 배열명=new 데이터형[5]; ===> 갯수를 지정하면 자동 초기화 new사용
 * 			
 * 						
 * 						int ===== 0
 * 						long ===== 0L
 * 						double ==== 0.0
 * 						boolean === false (좌석예매)
 * 						클래스:String === null
 * 		3. 생성
 * 			int[] arr=new int[5];
 * 			값을 변경 : arr[0]=10
 * 			인덱스 번호는 0번부터 시작 한다
 * 			총 갯수 : 배열명.length
 * 			* 배열 범위를 초과하면 오류 발생 :
 * 
 * 		** 인덱스 번호 : 순차적으로 설정
 * 			=> for이용
 * 			=> 일반 for : 배열의 데이터값 변경, 조작
 * 			=> for-each : 배열의 데이터 출력하는 경우에 주로 사용
 */	
/*
 * 	변수 : 기본형 (한개 저장)
 * 	배열
 * 	클래스
 * 	------------------- 초기화!!(초기화가 안된 상태에서는 오류를 발생하기 때문에 필요)
 * 		=> 변수
 * 		 ------
 * 		= 지역변수 (메소드 안에 선언되는 변수) ==> 메소드에서 사용이 가능 {}이 종료되면 자동으로 사라지는 변수 
 * 		= 매개변수 : 사용자의 요청값을 받는 역할. 메소드 괄호 안에 선언되는 변수
 * 		= 전역변수 : 클래스 전체에서 사용되는 변수 (프로그램 종료시까지 사라지지 않는다)
 * 			= 인스턴스변수
 * 			= 공유변수
 * 		-----------------------------------------------------------
 * 		*** 프로그램은 데이터 관리  
 */
public class 배열선언 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		// 데이터 몇개 저장할고양? 5개
		int[] arr=new int[5]; // 0값으로 초기화 하는 과정 189page
		arr[0]=100;
		arr[1]=200;
		arr[2]=300;
		arr[3]=400;
		arr[4]=500;
		// for문 활용이 더 낫다..!
		/*
		 * 	for(int i=0;i<arr.length;i++)
		 * {
		 * 		arr[i]=(i+1)*100
		 * }
		 * 	배열 ==> 이용되는 제어문 for
		 */
		for(int i:arr) // 출력할 때 편함
		{
			System.out.print(i+" ");
		}
		System.out.println();
		System.out.println(Arrays.toString(arr)); // 모니터링. 값이 잘 전송됐는지 확인하는 방법. 어떤 순서로 저장되는지 확인
		/*
		 * 	1. 어떤 데이터형에 설정할 것인지
		 * 	2. 몇 개를 저장할 것인지
		 * 	3. 초기화로 뭘 줄 건지
		 * 	4. 어떻게 활용할 건지
		 * 	5. 어떻게 출력할 건지
		 * 	------------------------ 웹 (삭제, 조건검색) ==> 이메일 체크박스 ==> String[]
		 */
	}

}
